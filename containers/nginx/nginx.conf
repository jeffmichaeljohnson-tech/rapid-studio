worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Performance tuning
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Default MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;

    # Upstreams
    upstream orchestrator {
        server orchestrator:8000;
    }

    upstream assets_api {
        server assets-api:8080;
    }

    upstream grafana {
        server grafana:3000;
    }

    server {
        listen 80;

        # Health check
        location / {
            return 200 'NGINX Gateway OK\n';
            add_header Content-Type text/plain;
        }

        # Orchestrator API
        location /api/orchestrator/ {
            proxy_pass http://orchestrator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Assets API
        location /api/assets/ {
            proxy_pass http://assets_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana UI
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

